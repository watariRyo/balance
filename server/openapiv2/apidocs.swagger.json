{
  "swagger": "2.0",
  "info": {
    "title": "group.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "GroupService"
    },
    {
      "name": "IncomeAndExpenditureService"
    },
    {
      "name": "UserTagService"
    },
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/balance/api/delete/group": {
      "post": {
        "operationId": "GroupService_DeleteGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/balance/api/delete/incomeAndExpenditure": {
      "post": {
        "operationId": "IncomeAndExpenditureService_DeleteIncomeAndExpenditure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteIncomeAndExpenditureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteIncomeAndExpenditureRequest"
            }
          }
        ],
        "tags": [
          "IncomeAndExpenditureService"
        ]
      }
    },
    "/balance/api/delete/tag": {
      "post": {
        "operationId": "UserTagService_DeleteUserTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteUserTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteUserTagRequest"
            }
          }
        ],
        "tags": [
          "UserTagService"
        ]
      }
    },
    "/balance/api/delete/user": {
      "post": {
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoDeleteUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/balance/api/get/group": {
      "post": {
        "operationId": "GroupService_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoGetGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/balance/api/get/incomeAndExpenditure": {
      "post": {
        "operationId": "IncomeAndExpenditureService_GetIncomeAndExpenditure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetIncomeAndExpenditureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoGetIncomeAndExpenditureRequest"
            }
          }
        ],
        "tags": [
          "IncomeAndExpenditureService"
        ]
      }
    },
    "/balance/api/get/tag": {
      "post": {
        "operationId": "UserTagService_GetUserTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoGetUserTagRequest"
            }
          }
        ],
        "tags": [
          "UserTagService"
        ]
      }
    },
    "/balance/api/get/user": {
      "post": {
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoGetUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/balance/api/list/group": {
      "post": {
        "operationId": "GroupService_ListGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoListGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/balance/api/list/incomeAndExpenditure": {
      "post": {
        "operationId": "IncomeAndExpenditureService_ListIncomeAndExpenditure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListIncomeAndExpenditureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoListIncomeAndExpenditureRequest"
            }
          }
        ],
        "tags": [
          "IncomeAndExpenditureService"
        ]
      }
    },
    "/balance/api/list/tag": {
      "post": {
        "operationId": "UserTagService_ListUserTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListUserTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoListUserTagRequest"
            }
          }
        ],
        "tags": [
          "UserTagService"
        ]
      }
    },
    "/balance/api/register/group": {
      "post": {
        "operationId": "GroupService_RegisterGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/balance/api/register/incomeAndExpenditure": {
      "post": {
        "operationId": "IncomeAndExpenditureService_RegisterIncomeAndExpenditure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterIncomeAndExpenditureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterIncomeAndExpenditureRequest"
            }
          }
        ],
        "tags": [
          "IncomeAndExpenditureService"
        ]
      }
    },
    "/balance/api/register/tag": {
      "post": {
        "operationId": "UserTagService_RegisterUserTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterUserTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterUserTagRequest"
            }
          }
        ],
        "tags": [
          "UserTagService"
        ]
      }
    },
    "/balance/api/register/user": {
      "post": {
        "operationId": "UserService_RegisterUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/balance/api/update/group": {
      "post": {
        "operationId": "GroupService_UpdateGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateGroupRequest"
            }
          }
        ],
        "tags": [
          "GroupService"
        ]
      }
    },
    "/balance/api/update/incomeAndExpenditure": {
      "post": {
        "operationId": "IncomeAndExpenditureService_UpdateIncomeAndExpenditure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateIncomeAndExpenditureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateIncomeAndExpenditureRequest"
            }
          }
        ],
        "tags": [
          "IncomeAndExpenditureService"
        ]
      }
    },
    "/balance/api/update/tag": {
      "post": {
        "operationId": "UserTagService_UpdateUserTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateUserTagResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateUserTagRequest"
            }
          }
        ],
        "tags": [
          "UserTagService"
        ]
      }
    },
    "/balance/api/update/user": {
      "post": {
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/balance/login": {
      "post": {
        "operationId": "UserService_LoginUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/balance/logout": {
      "post": {
        "operationId": "UserService_LogoutUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLogoutUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLogoutUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "protoDeleteGroupRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoDeleteGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "protoDeleteIncomeAndExpenditureRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoDeleteIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "protoDeleteUserRequest": {
      "type": "object",
      "properties": {
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoDeleteUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "protoDeleteUserTagRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoDeleteUserTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "protoGetGroupRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoGetGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      }
    },
    "protoGetIncomeAndExpenditureRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoGetIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        }
      }
    },
    "protoGetUserRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      },
      "title": "use user schema"
    },
    "protoGetUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "isPrivacyChecked": {
          "type": "boolean"
        }
      }
    },
    "protoGetUserTagRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoGetUserTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        }
      }
    },
    "protoGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        }
      }
    },
    "protoIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        }
      }
    },
    "protoListGroupRequest": {
      "type": "object",
      "properties": {
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoListGroupResponse": {
      "type": "object",
      "properties": {
        "groupList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoGroupResponse"
          }
        }
      }
    },
    "protoListIncomeAndExpenditureRequest": {
      "type": "object",
      "properties": {
        "occurrenceDate": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoListIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "incomeAndExpenditureList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoIncomeAndExpenditureResponse"
          }
        }
      }
    },
    "protoListUserTagRequest": {
      "type": "object",
      "properties": {
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoListUserTagResponse": {
      "type": "object",
      "properties": {
        "userTagList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoUserTagResponse"
          }
        }
      }
    },
    "protoLoginUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoLoginUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshToken": {
          "type": "string"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoLogoutUserRequest": {
      "type": "object",
      "properties": {
        "sessionId": {
          "type": "string"
        }
      }
    },
    "protoLogoutUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "protoRegisterGroupRequest": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoRegisterGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      }
    },
    "protoRegisterIncomeAndExpenditureRequest": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoRegisterIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        }
      }
    },
    "protoRegisterUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoRegisterUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        },
        "accessToken": {
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "refreshToken": {
          "type": "string"
        },
        "refreshTokenExpiresAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoRegisterUserTagRequest": {
      "type": "object",
      "properties": {
        "tagName": {
          "type": "string"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoRegisterUserTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        }
      }
    },
    "protoUpdateGroupRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "groupName": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoUpdateGroupResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      }
    },
    "protoUpdateIncomeAndExpenditureRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoUpdateIncomeAndExpenditureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "amount": {
          "type": "integer",
          "format": "int32"
        },
        "occurrenceDate": {
          "type": "string"
        },
        "userTagId": {
          "type": "string",
          "format": "int64"
        },
        "classification": {
          "type": "string"
        }
      }
    },
    "protoUpdateUserRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "sessionId": {
          "type": "string"
        }
      }
    },
    "protoUpdateUserResponse": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "isPrivacyChecked": {
          "type": "boolean"
        }
      }
    },
    "protoUpdateUserTagRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "sessoinId": {
          "type": "string"
        }
      }
    },
    "protoUpdateUserTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        }
      }
    },
    "protoUserTagResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "userId": {
          "type": "string"
        },
        "tagName": {
          "type": "string"
        },
        "hasGroup": {
          "type": "boolean"
        },
        "groupId": {
          "type": "string",
          "format": "int64"
        },
        "grantLimit": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
